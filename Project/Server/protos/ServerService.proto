syntax = "proto3";

service ServerService {
  rpc Read (ReadRequest) returns (ReadReply);
  rpc Write (WriteRequest) returns (WriteReply);
  rpc ListServer (ListServerRequest) returns (ListServerReply);
  rpc BroadcastMsg (BroadcastMessageRequest) returns (BroadcastMessageReply);
  rpc Freeze (FreezeRequest) returns (FreezeReply);
  rpc UnFreeze (UnFreezeRequest) returns (UnFreezeReply);
  rpc Crash (CrashRequest) returns (CrashReply);
  rpc Status (StatusRequest) returns (StatusReply);
  rpc guardianRequest (GuardianRequest) returns (GuardianReply);
  rpc Ping (PingRequest) returns (PingReply);
  rpc GetPartitionObjects (PartitionObjectsRequest) returns (PartitionObjectsReply);
  rpc UpdateMaster (UpdateMasteRequest) returns (UpdateMasterReply);
  rpc AnnounceNewMaster (AnnounceRequest) returns (AnnounceReply);
  rpc GiveNewPartitionMaster (NewPartitionMasterRequest) returns (NewPartitionMasterReply);
}

message ServerObjectInfo {
	string partitionId = 1;
	string objectId = 2;
	string objectValue = 3;
	int32 objectSeqNum = 4;
}

message ReadRequest {
	string partitionId = 1;
	string objectId = 2;
}

message ReadReply {
	string objectValue = 1;
}

message WriteRequest {
	string partitionId = 1;
	string objectId = 2;
	string objectValue = 3;
}

message WriteReply {
	bool ok = 1;
}

message ListServerRequest {}

message ListServerReply {
	string objects = 1;
}

message BroadcastMessageRequest {
	string partitionId = 1;
	string objectId = 2;
	string message = 3;
	int32 objectSeqNum = 4;
}

message BroadcastMessageReply {} 

message FreezeRequest {}

message FreezeReply {}

message UnFreezeRequest {}

message UnFreezeReply {}

message CrashRequest {}
message CrashReply {}

message StatusRequest {}
message StatusReply {}

message GuardianRequest {
	string url = 1;
}
message GuardianReply {
	bool Ok = 1;
}

message PingRequest {}

message PingReply {}

message PartitionObjectsRequest {
	string partitionId = 1;
}

message PartitionObjectsReply {
	repeated ServerObjectInfo objectInfo = 1;
}
message UpdateMasteRequest {
	string masterPartition = 1;
	repeated ServerObjectInfo objectInfo = 2;
	string deadMasterId = 3;
}

message UpdateMasterReply {	}

message AnnounceRequest {
	string newMasterId = 1;
	string deadMasterId = 2;
	string newMasterPartition = 3;
}
message AnnounceReply {}

message NewPartitionMasterRequest {
	string partitionId = 1;
}

message NewPartitionMasterReply {
	string newMaster = 1;
}